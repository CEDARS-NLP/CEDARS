# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: docker.io/minio/minio
  command: server --console-address ":9001" http://minio/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: ROOTUSER
    MINIO_ROOT_PASSWORD: CHANGEME123
  healthcheck:
    test: ["CMD", "mc", "ready", "local"]
    interval: 30s
    timeout: 20s
    retries: 3
services:
  web:
    build:
      context: .
      dockerfile: ./cedars/Dockerfile
    image: cedars
    restart: always
    ports:
      - 5001:5000
    # flask requires SIGINT to stop gracefully
    # (default stop signal from Compose is SIGTERM)
    stop_signal: SIGINT
    depends_on:
      - db
      - redis

  db:
    image: mongo:latest
    ports:
      - 27018:27017
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - cedars_db:/data/db
    command: mongod --quiet --logpath /dev/null 

      
  minio:
    <<: *minio-common
    hostname: minio
    restart: always
    volumes:
      - data2-1:/data1
      - data2-2:/data2
  
  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:81"
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - web

  pines:
    build:
      context: ./PINES
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
      mode: replicated
      replicas: 4
    restart: on-failure:5

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data1
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 20s
      retries: 3
    
  worker:
    image: cedars
    command: python -m app.make_rq
    scale: 8
    depends_on:
      - web


volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  cedars_db:
  redis_data:
