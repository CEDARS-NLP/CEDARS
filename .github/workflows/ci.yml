name: CI

on:
  pull_request:
    - "github_workflows"
  push:
    branches:
      - "main"
      - "github_workflows"

jobs:
  test:
    name: Run tests & display coverage
    runs-on: ubuntu-latest
    permissions:
      # Gives the action the necessary permissions for publishing new
      # comments in pull requests.
      pull-requests: write
      # Gives the action the necessary permissions for pushing data to the
      # python-coverage-comment-action branch, and for editing existing
      # comments (to avoid publishing multiple comments in the same PR)
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.9
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      
      - name: install deps
        run: |
          cd cedars
          export POETRY_NO_INTERACTION=1 \
            POETRY_VIRTUALENVS_IN_PROJECT=1 \
            POETRY_VIRTUALENVS_CREATE=1 \
            POETRY_CACHE_DIR=/tmp/poetry_cache
          python -m pip install --upgrade pip
          python -m pip install poetry==1.7.1
          python -m poetry install
          export VIRTUAL_ENV=/.venv
          export PATH="/.venv/bin:$PATH"

      - name: Lint with flake8
        run: |
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 ./ --count --exit-zero --max-complexity=20 --max-line-length=127 --statistics

      - name: Install everything, run the tests, produce the .coverage file
        run: |
          touch .env
          echo "PROJECT_NAME=demo" >> .env
          echo "INVESTIGATOR_NAME=demo_user" >> .env
          echo "SECRET_KEY=cedars" >> .env
          echo "HOST=localhost" >> .env
          echo "PORT=5000" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_NAME=cedars" >> .env
          echo "DB_PORT=27017" >> .env
          echo "DB_USER=admin" >> .env
          echo "DB_PWD=password" >> .env
          echo "MINIO_HOST=localhost" >> .env
          echo "MINIO_PORT=9000" >> .env
          echo "MINIO_ACCESS_KEY=ROOTUSER" >> .env
          echo "MINIO_SECRET_KEY=CHANGEME123" >> .env
          echo "ENV=dev" >> .env
          echo "PINES_API_URL=http://localhost:8036" >> .env
          echo "REDIS_URL=localhost" >> .env
          echo "REDIS_PORT=6379" >> .env

          python -m pytest --cov=app

      # - name: Coverage comment
      #   id: coverage_comment
      #   uses: py-cov-action/python-coverage-comment-action@v3
      #   with:
      #     GITHUB_TOKEN: ${{ github.token }}

      # - name: Store Pull Request comment to be posted
      #   uses: actions/upload-artifact@v3
      #   if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
      #   with:
      #     # If you use a different name, update COMMENT_ARTIFACT_NAME accordingly
      #     name: python-coverage-comment-action
      #     # If you use a different name, update COMMENT_FILENAME accordingly
      #     path: python-coverage-comment-action.txt
      
      # - name: Build documentation
      #   run: mkdocs build
            
      # - name: Deploy to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./docs
